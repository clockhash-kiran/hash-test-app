generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
}

model User {
  id                String    @id @default(uuid())
  name              String?
  email             String    @unique
  username          String    @unique
  avatarUrl         String?
  emailVerified     DateTime?
  password          String?
  provider          String?
  providerAccountId String?
  role              Role      @default(CLIENT) // Default role is CLIENT
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  accounts           Account[]
  sessions           Session[] // Added relation for session management
  verificationTokens VerificationToken[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  provider          String
  providerAccountId String
  type              String
  access_token      String?
  expires_at        Int?
  refresh_token     String?
  scope             String?
  token_type        String?
  id_token          String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                 String   @id @default(uuid())
  sessionToken       String   @unique
  userId             String
  expires           DateTime
  refreshToken       String?  @unique
  refreshTokenExpires DateTime?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(cuid())
  token      String   @unique
  identifier String
  expires    DateTime

  user User @relation(fields: [identifier], references: [email])
}
